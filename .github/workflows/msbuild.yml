name: MSBuild

on:
  push:
    branches: release

env:
  SOLUTION_FILE_PATH: .
  BUILD_CONFIGURATION: Release
  PUBLISH_MANIFEST_FILENAME: publishManifest.json

  VS2019_PROJECT: VisualStudioDiscordRPC.Dev16
  VS2022_PROJECT: VisualStudioDiscordRPC.Dev17
  VS2026_PROJECT: VisualStudioDiscordRPC.Dev18

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: nuget restore ${{ env.SOLUTION_FILE_PATH }}

    - name: Build
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} ${{ env.SOLUTION_FILE_PATH }}

    - name: Fetch latest tags
      run: git fetch --all --tags --unshallow

    - name: Get latest tag
      id: get-latest-tag
      run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)" 

    - name: Create GitHub release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get-latest-tag.outputs.tag }}
        release_name: Visual Studio Discord RPC ${{ steps.get-latest-tag.outputs.tag }}
        owner: Ryavell
        draft: true
        prerelease: false

    - name: Upload Release Asset for 2019 Visual Studio
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.SOLUTION_FILE_PATH }}\${{ env.VS2019_PROJECT }}\bin\Release\${{ env.VS2019_PROJECT }}.vsix
        asset_name: ${{ env.VS2019_PROJECT }}.vsix
        asset_content_type: application/zip

    - name: Upload Release Asset for 2022 Visual Studio
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.SOLUTION_FILE_PATH }}\${{ env.VS2022_PROJECT }}\bin\Release\${{ env.VS2022_PROJECT }}.vsix
        asset_name: ${{ env.VS2022_PROJECT }}.vsix
        asset_content_type: application/zip

    - name: Upload Release Asset for 2026 Visual Studio
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.SOLUTION_FILE_PATH }}\${{ env.VS2026_PROJECT }}\bin\Release\${{ env.VS2026_PROJECT }}.vsix
        asset_name: ${{ env.VS2026_PROJECT }}.vsix
        asset_content_type: application/zip

    - name: Publish extension for Visual Studio 2019 to Marketplace
      uses: cezarypiatek/VsixPublisherAction@1.0
      with:
          extension-file: ${{ env.SOLUTION_FILE_PATH }}\${{ env.VS2019_PROJECT }}\bin\Release\${{ env.VS2019_PROJECT }}.vsix
          publish-manifest-file: ${{ env.SOLUTION_FILE_PATH }}\${{ env.VS2019_PROJECT }}\${{ env.PUBLISH_MANIFEST_FILENAME }}
          personal-access-code: ${{ secrets.MARKETPLACE_TOKEN }}

    - name: Publish extension for Visual Studio 2022 to Marketplace
      uses: cezarypiatek/VsixPublisherAction@1.0
      with:
          extension-file: ${{ env.SOLUTION_FILE_PATH }}\${{ env.VS2022_PROJECT }}\bin\Release\${{ env.VS2022_PROJECT }}.vsix
          publish-manifest-file: ${{ env.SOLUTION_FILE_PATH }}\${{ env.VS2022_PROJECT }}\${{ env.PUBLISH_MANIFEST_FILENAME }}
          personal-access-code: ${{ secrets.MARKETPLACE_TOKEN }}

    - name: Publish extension for Visual Studio 2026 to Marketplace
      uses: cezarypiatek/VsixPublisherAction@1.0
      with:
          extension-file: ${{ env.SOLUTION_FILE_PATH }}\${{ env.VS2026_PROJECT }}\bin\Release\${{ env.VS2026_PROJECT }}.vsix
          publish-manifest-file: ${{ env.SOLUTION_FILE_PATH }}\${{ env.VS2026_PROJECT }}\${{ env.PUBLISH_MANIFEST_FILENAME }}
          personal-access-code: ${{ secrets.MARKETPLACE_TOKEN }}

    
